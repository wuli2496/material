#include <iostream>
using namespace std;
int *set,*rank;
int FindSet(int x)
{
    if(set[x]!=x)
        set[x]=FindSet(set[x]);
    return set[x];
}
void MakeSet(int n)
{
	for(int i=1;i<=n;i++){
        set[i]=i;rank[i]=0;
	}
}
void Link(int a,int b)
{
    if(rank[a]>rank[b])
        set[b]=a;
    else if(rank[a]<rank[b])
        set[a]=b;
    else
    {
        set[a]=b;
        rank[b]++;
    }
}
void Union(int a,int b)
{
    Link(FindSet(a),FindSet(b));
}
void MergeSet(int m){
	int a,b;
	for(int i=0;i<m;i++){
		scanf("%d%d",&a,&b);
		Union(a,b);
	}
}
void OperateSet(int k){
	int a,b;
	char ch;
	for(int i=0;i<k;i++){
		cin>>ch;
		scanf("%d%d",&a,&b);
		if(ch=='Q'){
			if(FindSet(a)==FindSet(b))
				printf("yes\n");
			else printf("no\n");
		}
		else Union(a,b);
	}
}
int main(){
	int n,m,k;
	scanf("%d%d",&n,&m);
	set=new int[n+1];
	rank=new int[n+1];
	MakeSet(n);
	MergeSet(m);
	scanf("%d",&k);
	OperateSet(k);
	delete []set;
	delete []rank;
	return 0;
}